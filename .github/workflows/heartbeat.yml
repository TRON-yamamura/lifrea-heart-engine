name: Lifrea Heart Engine (list DBs)
on: workflow_dispatch

jobs:
  list:
    runs-on: ubuntu-latest
    steps:
      - name: List Notion databases visible to this integration
        uses: actions/github-script@v6
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        with:
          script: |
            const token = process.env.NOTION_TOKEN;
            const headers = {
              "Authorization": `Bearer ${token}`,
              "Notion-Version": "2022-06-28",
              "Content-Type": "application/json"
            };

            async function getDb(id){
              const r = await fetch(`https://api.notion.com/v1/databases/${id}`, { headers });
              if (!r.ok) return null;
              return await r.json();
            }

            // まず search で DB 一覧を取得
            const r = await fetch("https://api.notion.com/v1/search", {
              method: "POST",
              headers,
              body: JSON.stringify({ filter: { value: "database", property: "object" }, page_size: 100 })
            });
            const data = await r.json();
            if (!r.ok) throw new Error("Notion search failed: " + JSON.stringify(data));

            console.log("=== Databases visible to this integration ===");
            for (const item of data.results || []) {
              const normId = item.id.replace(/-/g, "");
              const title  = (item.title?.[0]?.plain_text || "(no title)").trim();
              const dbinfo = await getDb(normId);
              const props  = Object.keys(dbinfo?.properties || {});
              console.log(`- title="${title}"  id=${normId}  props=${JSON.stringify(props)}`);
            }
            console.log("============================================");
            throw new Error("Stop after listing (copy the id for the English 7-column DB).");
