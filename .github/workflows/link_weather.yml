- name: Link Heart rows to Weather Phrase Map
  uses: actions/github-script@v6
  env:
    NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
    HEART_DB_ID: ${{ secrets.NOTION_DATABASE_ID }}
    MAP_DB_ID: ${{ secrets.NOTION_WEATHER_PHRASE_DB_ID }}
  with:
    script: |
      const headers = {
        'Authorization': `Bearer ${process.env.NOTION_TOKEN}`,
        'Notion-Version': '2022-06-28',
        'Content-Type': 'application/json',
      };

      async function notion(path, opts={}) {
        const res = await fetch(`https://api.notion.com/v1${path}`, { headers, ...opts });
        if (!res.ok) {
          const body = await res.text();
          core.info(`HTTP ${res.status}: ${body}`);
          throw new Error(`Notion API ${res.status} for ${path}`);
        }
        return res.json();
      }

      // 1) Heart 側で weather_link が空の行を取る
      const hearts = await notion(`/databases/${process.env.HEART_DB_ID}/query`, {
        method: 'POST',
        body: JSON.stringify({
          filter: { property: 'weather_link', relation: { is_empty: true } },
          page_size: 25
        })
      });

      core.info(`target rows: ${hearts.results.length}`);

      for (const page of hearts.results) {
        const props = page.properties;
        const weather = props.weather?.select?.name;
        if (!weather) { core.info(`skip(no weather): ${page.id}`); continue; }

        // 2) Weather Phrase Map で該当タイトルを検索
        const mapRes = await notion(`/databases/${process.env.MAP_DB_ID}/query`, {
          method: 'POST',
          body: JSON.stringify({
            filter: { property: 'Name', title: { equals: weather } },
            page_size: 1
          })
        });

        if (mapRes.results.length === 0) {
          core.info(`map not found for "${weather}"`);
          continue;
        }
        const mapPageId = mapRes.results[0].id;

        // 3) Heart の行に Relation を貼る（PATCH /v1/pages/{id}）
        await notion(`/pages/${page.id}`, {
          method: 'PATCH',
          body: JSON.stringify({
            properties: {
              weather_link: { relation: [{ id: mapPageId }] }
            }
          })
        });

        core.info(`linked: ${weather} -> ${page.id} (${mapPageId})`);
      }
