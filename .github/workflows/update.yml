name: Lifrea Heart Engine (update)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"  # 毎時00分に自動実行

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Call Lifrea Heart Script
        uses: actions/github-script@v6
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        with:
          script: |
            const fetch = global.fetch || require('node-fetch');

            // JST（日本時間）へ変換
            const now = new Date();
            now.setHours(now.getHours() + 9);

            const weekdayNames = ['日', '月', '火', '水', '木', '金', '土'];
            const weatherOptions = ['晴れ', '曇り', '雨', '雪'];
            const moodSeed = Math.random();

            // 登録データ作成
            const newPage = {
              parent: { database_id: process.env.NOTION_DATABASE_ID },
              properties: {
                title: {
                  title: [{ text: { content: "GitHub Heartbeat" } }]
                },
                time_iso: {
                  date: { start: now.toISOString() }
                },
                hour: {
                  number: now.getHours() + now.getMinutes() / 60
                },
                weekday: {
                  select: { name: weekdayNames[now.getDay()] }
                },
                weather: {
                  select: { name: weatherOptions[Math.floor(Math.random() * weatherOptions.length)] }
                },
                temp_c: {
                  number: 20 + Math.random() * 10
                },
                mood_seed: {
                  number: Math.round(moodSeed * 100)
                }
              }
            };

            const response = await fetch("https://api.notion.com/v1/pages", {
              method: "POST",
              headers: {
                "Authorization": `Bearer ${process.env.NOTION_TOKEN}`,
                "Content-Type": "application/json",
                "Notion-Version": "2022-06-28"
              },
              body: JSON.stringify(newPage)
            });

            if (!response.ok) {
              const errorData = await response.text();
              core.setFailed(`Notion API error: ${response.status} ${errorData}`);
            } else {
              core.info("✅ Notion entry created successfully (JST mode)");
            }
